{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ipfs","Lifo","tail","this","Symbol","asyncIterator","console","log","dag","get","value","hash","prev","toString","Log","name","body","style","display","colSpan","App","ipns","localStorage","getItem","state","head","following","age","a","IPFS","create","EXPERIMENTAL","pubsub","namesysPubsub","window","load","stop","table","promList","Object","keys","map","resolve","last","Promise","all","lifo","item","push","setState","getLog","save","oldHead","put","from","fromHash","cid","msg","unshift","publish","JSON","stringify","maybeHead","undefined","values","user","subscribe","data","parse","orig","setItem","onSubmit","e","preventDefault","target","sort","type","createLog","i","createVersion","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fba3ce2a.chunk.js","sourcesContent":["import IPFS from 'ipfs-core';\nimport { Component } from \"react\";\nimport last from 'it-last';\n\nlet ipfs\n\nclass Lifo {\n\tconstructor(tail) {\n\t\tthis.tail = tail\n\t}\n\tasync *[Symbol.asyncIterator]() {\n\t\tlet tail = this.tail\n\t\tlet hash\n\t\twhile(tail) {\n\t\t\tconsole.log(tail)\n\t\t\tconst value = (await ipfs.dag.get(tail)).value\n\t\t\thash        = tail\n\t\t\ttail        = value.prev ? value.prev.toString() : null\n\t\t\tyield { ...value, hash }\n\t\t}\n\t}\n}\n\nfunction Log({hash, name, body}) {\n\treturn <div style={ {display : \"block\" } }>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t<tr><td colSpan=\"2\"><pre>{ hash }</pre></td></tr>\n\t\t\t\t<tr><td>Name</td><td>{ name }</td></tr>\n\t\t\t\t<tr><td>Body</td><td>{ body }</td></tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n}\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tconst name      = null\n\t\tconst ipns      = localStorage.getItem(\"immutablog-ipns\")\n\t\tconst head      = null\n\t\tconst following = {}\n\t\tconst log       = []\n\t\tthis.state = { name, hash: null, head, following, log, ipns, age: 0 }\n\t}\n\tasync componentDidMount() {\n\t\tipfs = await IPFS.create({\n\t\t\tEXPERIMENTAL: {\n\t\t\t\tpubsub       : true,\n\t\t\t\tnamesysPubsub: true,\n\t\t\t}\n\t\t})\n\t\twindow.ipfs = ipfs\n\t\tif(this.state.ipns) {\n\t\t\tawait this.load(this.state.ipns)\n\t\t}\n\t}\n\tasync componentWillUnmount() {\n\t\tawait ipfs.stop()\n\t}\n\t// ipfs.name.resolve is not working on browser\n\tasync getHeadOfFollowing(following) {\n\t\tconsole.table(following)\n\t\tconst promList = Object.keys(following).map(async (name) => {\n\t\t\tconsole.log(`name: ${ following[name] }`)\n\t\t\tconsole.log(await ipfs.name.resolve(following[name]))\n\t\t\treturn new Lifo(await last(ipfs.name.resolve(following[name])))\n\t\t})\n\t\tconsole.log(promList)\n\t\treturn await Promise.all(promList)\n\t}\n\tasync getLog(head, following) {\n\t\tlet { age } = this.state\n\t\tconsole.table({ head, following })\n\t\tlet log = [];\n\t\tconsole.log(`head: ${ head }`)\n\t\tconst lifo = new Lifo(head)\n\t\t// ipfs.name.resolve is not working on browser\n\t\t//let foll\n\t\t//if(following)\n\t\t//\tfoll = await this.getHeadOfFollowing(following)\n\t\t//const all  = [ lifo, ...foll ]\n\t\t//console.log(all)\n\t\tfor await (const item of lifo) {\n\t\t\tconsole.table(item)\n\t\t\tlog.push(item)\n\t\t\tif(item.age > age)\n\t\t\t\tthis.setState({ age: item.age })\n\t\t}\n\t\treturn log\n\t}\n\tasync createVersion(name) {\n\t\tconsole.log(`name: ${ name }`)\n\t\tconsole.table(this.state)\n\t\tconst { head, following = {} } = this.state\n\t\tconst log  = await this.getLog(head, following)\n\t\tconst hash = await this.save({ name, log })\n\t\tconsole.log(`hash: ${ hash }`)\n\t}\n\tasync createLog(body) {\n\t\tconsole.table(this.state)\n\t\tconst { ipns, hash, head: oldHead, name, log = [] } = this.state\n\t\tlet { age } = this.state\n\t\tconst cid = await ipfs.dag.put({\n\t\t\tfrom    : ipns,\n\t\t\tfromHash: hash,\n\t\t\tprev    : oldHead,\n\t\t\tage     : age++,\n\t\t\tname,\n\t\t\tbody,\n\t\t})\n\t\tconst head = cid.toString()\n\t\tconst msg = { name, body, head, hash: head }\n\t\tlog.unshift(msg)\n\t\tipfs.pubsub.publish(ipns, JSON.stringify(msg))\n\t\tawait this.save({ name, head, log, age })\n\t}\n\tasync load(ipns) {\n\t\tconsole.log(`load(${ ipns })`)\n\t\tconsole.table(this.state)\n\t\tconst hash = await last(ipfs.name.resolve(ipns))\n\t\tconsole.log(`hash: ${ hash }`)\n\t\tlet { name = \"\", head: maybeHead, following, age } = (await ipfs.dag.get(hash)).value\n\t\tconst head = maybeHead !== null && maybeHead !== undefined ? maybeHead.toString() : null;\n\t\tconst log = await this.getLog(head, following)\n\t\tif(following) {\n\t\t\tawait Promise.all(\n\t\t\t\tObject.values(following).map(\n\t\t\t\t\tasync (user) => {\n\t\t\t\t\t\tconsole.log(`subscribing: ${ user }`)\n\t\t\t\t\t\tipfs.pubsub.subscribe(user,\n\t\t\t\t\t\t\t({ from, data }) => {\n\t\t\t\t\t\t\t\tconsole.log(`received data: `, { from, data: data.toString() })\n\t\t\t\t\t\t\t\tif(user !== from) return;\n\t\t\t\t\t\t\t\tconst msg = JSON.parse(data.toString())\n\t\t\t\t\t\t\t\tif(age < msg.age) age = msg.age\n\t\t\t\t\t\t\t\tlog.unshift(msg)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\tthis.setState({ hash, name, head, following, log, age: age })\n\t\tconsole.table(this.state)\n\t}\n\tasync save({\n\t\tname       = this.state.name,\n\t\thash: orig = this.state.hash,\n\t\thead       = this.state.head,\n\t\tfollowing  = this.state.following,\n\t\tlog        = this.state.log,\n\t\tage        = this.state.age + 1\n\t}) {\n\t\tconsole.table({ name, hash: orig, head, following, log, age })\n\t\tconst cid  = await ipfs.dag.put({\n\t\t\t\"parent\"  : orig,\n\t\t\tname,\n\t\t\thead,\n\t\t\tfollowing,\n\t\t\tage\n\t\t})\n\t\tconst hash = cid.toString()\n\t\tconst ipns = await ipfs.name.publish(cid)\n\t\tlocalStorage.setItem(\"immutablog-ipns\", ipns.name)\n\t\tthis.setState({ name, hash, head, following, log, ipns: ipns.name, age })\n\t\tconsole.table(this.state)\n\t\treturn hash\n\t}\n\n\trender() {\n\t\tconst { hash, ipns, following = {}, log = [] } = this.state\n\t\tif(ipns) {\n\t\t\tconsole.table(this.state)\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<pre>/ipns/{ ipns }</pre>\n\t\t\t\t\t<pre>{ hash }</pre>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h4>Following</h4>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tonSubmit={\n\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\t\tconst name = e.target.name.value\n\t\t\t\t\t\t\t\t\tconst cid  = e.target.cid.value\n\t\t\t\t\t\t\t\t\te.target.name.value = \"\"\n\t\t\t\t\t\t\t\t\te.target.cid.value  = \"\"\n\t\t\t\t\t\t\t\t\tthis.save({\n\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\tfollowing: { ...following, [name]: cid },\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tObject.keys(following).sort().map(\n\t\t\t\t\t\t\t\t\t\t\tname => <tr key={ name }>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{ name }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td><pre>{ following[name] }</pre></td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\tname<br />\n\t\t\t\t\t\t\t\t\t\t\t<input name=\"name\" />\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\tipns<br />\n\t\t\t\t\t\t\t\t\t\t\t<input name=\"cid\" />\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"+\" />\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h4>What's happening?</h4>\n\t\t\t\t\t<form onSubmit={\n\t\t\t\t\t\te => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tthis.createLog(e.target.body.value)\n\t\t\t\t\t\t\te.target.body.value = \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}>\n\t\t\t\t\t\t<textarea name=\"body\" />\n\t\t\t\t\t\t<input type=\"submit\" />\n\t\t\t\t\t</form>\n\t\t\t\t\t<h4>Log</h4>\n\t\t\t\t\t{\n\t\t\t\t\t\tlog.map(\n\t\t\t\t\t\t\ti => <Log key={ i.hash } { ...i } />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn <form\n\t\t\t\tonSubmit={\n\t\t\t\t\te => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.createVersion(e.target.name.value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t>\n\t\t\t\tYour name: <input name=\"name\" />\n\t\t\t\t<input type=\"submit\" />\n\t\t\t</form>\n\t\t}\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}